<!--
****************************************************************************************************
Project global post-settings and targets.
****************************************************************************************************-->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Set computed properties after all dependent properties have been resolved -->
  <PropertyGroup>
    <DefineConstants Condition="'$(InternalsInvisible)' == 'true'">$(DefineConstants);INTERNALS_INVISIBLE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <BuildDependsOn>SetComputedProperties;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>
  <Target Name="SetComputedProperties">
    <PropertyGroup>
      <!-- If building the runtime then override the default AssemblyVersion. This only affects nightly builds. -->
      <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">$(VersionMajor).$(VersionMinor).0.$(VersionRevision)</AssemblyVersion>
      <AssemblyFileVersion Condition="'$(AssemblyFileVersion)' == ''">$(VersionMajor).$(VersionMinor).$(VersionBuild).$(VersionRevision)</AssemblyFileVersion>
      <!-- TODO: update version.targets and allow NuGetPackageVersion to be overridden as before -->
      <!-- Always override the definition of NuGetPackageVersion because version.targets sets based on VersionMajor/VersionMinor even if those values are from the tooling -->
      <NuGetPackageVersion>$(VersionMajor).$(VersionMinor).$(VersionRelease)</NuGetPackageVersion>
      <NuSpecProperties>NuGetPackageVersion=$(NuGetPackageVersion)</NuSpecProperties>
    </PropertyGroup>
  </Target>

  <!-- GetNuGetContentFromProject: Gets the Compile item collection (source files) from projects into the NuGetContent item. -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.nuproj'">
    <BuildDependsOn>GetNuGetContentFromProject;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <NuGetContentProject>
      <SourceRootFullPath />
      <Destination>src</Destination>
    </NuGetContentProject>
  </ItemDefinitionGroup>

  <Target Name="GetNuGetContentFromProject" Condition="'@(NuGetContentProject)' != ''">
    <MSBuild Projects="$(MSBuildThisFileFullPath)" Targets="GetNuGetContentFromProjectCore"
             Properties="NuGetContentProject=%(NuGetContentProject.FullPath);SourceRootFullPath=%(RootDir)%(Directory)\..\;Destination=%(Destination)" >
      <Output TaskParameter="TargetOutputs" ItemName="NuGetContent" />
    </MSBuild>
  </Target>

  <Target Name="GetNuGetContentFromProjectCore" Outputs="@(NuGetContent)">
    <MSBuild Projects="$(NuGetContentProject)" Targets="GetCompile" RebaseOutputs="true">
      <Output TaskParameter="TargetOutputs" ItemName="Compile" />
    </MSBuild>
    <ItemGroup>
      <NugetContent Include="%(Compile.FullPath)">
        <Destination>$([System.IO.Path]::Combine($(Destination), $([MSBuild]::MakeRelative($([System.IO.Path]::GetFullPath($(SourceRootFullPath))), %(Compile.RootDir)%(Directory)))))</Destination>
      </NugetContent>
    </ItemGroup>
  </Target>
  
  <Import Project="StyleCop.targets" Condition="Exists('..\packages\StyleCop.4.7.10.0\lib\StyleCop.dll')" />
  <Import Project="$(CustomAfterServiceModelCompositionTargets)" Condition="Exists('$(CustomAfterServiceModelCompositionTargets)')" Label="Post-targets Build Extensibility Point." />
</Project>

